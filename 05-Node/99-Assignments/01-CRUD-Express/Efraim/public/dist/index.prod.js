"use strict";function handleTask(e){e.preventDefault();try{var n=e.target.elements.task.value,r=e.target.elements.dueDate.value;return new Promise(function(t,a){axios.post("/addListItem",{task:n,dueDate:r}).then(function(e){t(e.data.list),renderArrayToDom(e.data.list),alert("Submitted Succesfuly!")}).catch(function(e){a(e)}),e.target.reset()})}catch(e){console.error(e)}}window.addEventListener("load",function(){try{return new Promise(function(t,a){axios.get("/getList").then(function(e){t(e.data.list),renderArrayToDom(e.data.list)}).catch(function(e){a(e)})})}catch(e){console.error(e)}});var form=document.querySelector("form");function deleteTask(e){try{return new Promise(function(t,a){axios.delete("/deleteTask/".concat(e)).then(function(e){t(e.data.list),renderArrayToDom(e.data.list)}).catch(function(e){a(e)})})}catch(e){console.error(e)}}function updateTask(e){try{var n=document.getElementById("".concat(e,"update")).value;return new Promise(function(t,a){axios.put("/updateTask",{id:e,newTaskName:n}).then(function(e){t(e.data.list.list),renderArrayToDom(e.data.list.list),alert("updated succefully!")}).catch(function(e){a(e)})})}catch(e){console.error(e)}}function updateStatus(e){try{return new Promise(function(t,a){axios.put("/updateStatus",{id:e}).then(function(e){t(e.data.list.list),renderArrayToDom(e.data.list.list)}).catch(function(e){a(e)})})}catch(e){console.error(e)}}function dateUrgency(e){return(new Date(e)-new Date)/1e3<86400?"red":(new Date(e)-new Date)/1e3<259200?"rgb(220, 220, 2)":"blue"}function renderArrayToDom(t){var a,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,a=document.querySelector(".holder"),n="",e.next=5,regeneratorRuntime.awrap(t.sort(function(e,t){return console.log(new Date-new Date(e.dueDate)),new Date(e.dueDate)-new Date(t.dueDate)}));case 5:return e.next=7,regeneratorRuntime.awrap(t.forEach(function(e){var t;"Incomplete"===e.status?(t=dateUrgency(e.dueDate),n+='<div class="holder__item" id=\''.concat(e.itemID,'\'>\n                <div class="holder__item__header">Task:</div>\n                <div class="holder__item__taskDisplay">').concat(e.item,'</div>\n                <input class="holder__item__task" id="').concat(e.itemID,'update" placeholder="Edit Task, Click Update!"  value="">\n                <div class=\'button button--update\' onclick=\'updateTask("').concat(e.itemID,'")\'>UPDATE</div>\n                <div class="holder__item__header">Due Date:</div>\n                <div class="holder__item__dueDate" style="color: ').concat(t,'">').concat(e.dueDate,'</div>\n                <div class="holder__item__header">Status:</div>\n                <div class="holder__item__status" id="').concat(e.itemID,'status">').concat(e.status,"</div>\n                <div class='button button--update-status' id=\"").concat(e.itemID,'status-button" onclick=\'updateStatus("').concat(e.itemID,'")\'>Mark as Complete!</div>\n                <div class="button button--delete" onclick=\'deleteTask("').concat(e.itemID,"\")'>DELETE</div>\n                </div>")):n+='<div class="holder__item" id=\''.concat(e.itemID,'\'>\n                    <div class="holder__item__header">Task:</div>\n                    <div class="holder__item__taskDisplay" style="color: green">').concat(e.item,'</div>\n                    <div class="holder__item__header">Due Date:</div>\n                    <div class="holder__item__dueDate" style="color: green">').concat(e.dueDate,'</div>\n                    <div class="holder__item__header">Status:</div>\n                    <div class="green" id="').concat(e.itemID,'status">').concat(e.status,'</div>\n                    <div class="button button--delete" onclick=\'deleteTask("').concat(e.itemID,"\")'>DELETE</div>\n                    </div>")}));case 7:a.innerHTML=n,e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.error(e.t0);case 13:case"end":return e.stop()}},null,null,[[0,10]])}form.addEventListener("submit",handleTask);