"use strict";function getFullTaskList(){try{return new Promise(function(t,n){fetch("/getList").then(function(e){return e.json()}).then(function(e){t(e.list)}).catch(function(e){n(e)})})}catch(e){console.error(e)}}function handleTask(e){e.preventDefault();try{var r=e.target.elements.task.value,a=e.target.elements.dueDate.value;return new Promise(function(t,n){fetch("/addListItem",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({task:r,dueDate:a})}).then(function(e){return e.json()}).then(function(e){t(e.list),renderArrayToDom(e.list)}).catch(function(e){n(e)}),e.target.reset()})}catch(e){console.error(e)}}window.addEventListener("load",function(){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(getFullTaskList());case 3:return t=e.sent,e.next=6,regeneratorRuntime.awrap(renderArrayToDom(t));case 6:e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),console.error(e.t0);case 11:case"end":return e.stop()}},null,null,[[0,8]])});var form=document.querySelector("form");function deleteTask(e){try{return new Promise(function(t,n){fetch("/deleteTask/".concat(e),{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(function(e){return e.json()}).then(function(e){t(e.list),renderArrayToDom(e.list)}).catch(function(e){n(e)})})}catch(e){console.error(e)}}function updateTask(r){try{var a=document.getElementById("".concat(r,"update")).value;return new Promise(function(t,n){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:fetch("/updateTask",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:r,newTaskName:a})}).then(function(e){return e.json()}).then(function(e){t(e.list.list),renderArrayToDom(e.list.list)}).catch(function(e){n(e)});case 1:case"end":return e.stop()}})})}catch(e){console.error(e)}}function updateStatus(e){try{return new Promise(function(t,n){fetch("/updateStatus",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})}).then(function(e){return e.json()}).then(function(e){t(e.list.list),renderArrayToDom(e.list.list)}).catch(function(e){n(e)})})}catch(e){console.error(e)}}function editTaskKeepText(t){var n,r,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=document.getElementById("".concat(t,"update")),e.next=4,regeneratorRuntime.awrap(getFullTaskList());case 4:return r=e.sent,e.next=7,regeneratorRuntime.awrap(r.filter(function(e){return e.itemID===t}));case 7:a=e.sent,n.placeholder="",n.value=a[0].item,e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),console.error(e.t0);case 15:case"end":return e.stop()}},null,null,[[0,12]])}function dateUrgency(e){try{return(new Date(e)-new Date)/1e3<86400?"red":(new Date(e)-new Date)/1e3<259200?"orange":(new Date(e)-new Date)/1e3<604800?"rgb(220, 220, 2)":"blue"}catch(e){console.error(e)}}function renderArrayToDom(t){var n,r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=document.querySelector(".holder"),r="",e.next=5,regeneratorRuntime.awrap(t.sort(function(e,t){return new Date(e.dueDate)-new Date(t.dueDate)}));case 5:return e.next=7,regeneratorRuntime.awrap(t.forEach(function(e){var t;"Incomplete"===e.status?(t=dateUrgency(e.dueDate),r+='<div class="holder__item" id=\''.concat(e.itemID,'\'>\n                <div class="holder__item__header">Task:</div>\n                <div class="holder__item__taskDisplay">').concat(e.item,'</div>\n                <input class="holder__item__task" id="').concat(e.itemID,'update" placeholder="Edit Task, Click Update!"  value="" onclick=\'editTaskKeepText("').concat(e.itemID,"\")'>\n                <div class='button button--update' onclick='updateTask(\"").concat(e.itemID,'")\'>UPDATE</div>\n                <div class="holder__item__header">Due Date:</div>\n                <div class="holder__item__dueDate" style="color: ').concat(t,'">').concat(e.dueDate,'</div>\n                <div class="holder__item__header">Status:</div>\n                <div class="holder__item__status" id="').concat(e.itemID,'status">').concat(e.status,"</div>\n                <div class='button button--update-status' id=\"").concat(e.itemID,'status-button" onclick=\'updateStatus("').concat(e.itemID,'")\'>Mark as Complete!</div>\n                <div class="button button--delete" onclick=\'deleteTask("').concat(e.itemID,"\")'>DELETE</div>\n                </div>")):r+='<div class="holder__item" id=\''.concat(e.itemID,'\'>\n                    <div class="holder__item__header">Task:</div>\n                    <div class="holder__item__taskDisplay" style="color: green">').concat(e.item,'</div>\n                    <div class="holder__item__header">Due Date:</div>\n                    <div class="holder__item__dueDate" style="color: green">').concat(e.dueDate,'</div>\n                    <div class="holder__item__header">Status:</div>\n                    <div class="green" id="').concat(e.itemID,'status">').concat(e.status,'</div>\n                    <div class="button button--delete" onclick=\'deleteTask("').concat(e.itemID,"\")'>DELETE</div>\n                    </div>")}));case 7:n.innerHTML=r,e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.error(e.t0);case 13:case"end":return e.stop()}},null,null,[[0,10]])}form.addEventListener("submit",handleTask);