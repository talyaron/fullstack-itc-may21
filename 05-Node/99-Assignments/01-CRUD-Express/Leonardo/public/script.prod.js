"use strict";var handleForm=document.querySelector(".form");function handleSubmit(t){var n,a,r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t.preventDefault(),n=t.target.elements,a=n.taskTitle,r=n.taskDescription,a=a.value,r=r.value,a&&r){e.next=7;break}throw new Error("Please complete all the fields");case 7:return modalCreate.style.display="none",t.target.reset(),e.next=11,regeneratorRuntime.awrap(axios.post("/createTask",{taskTitle:a,taskDescription:r}));case 11:renderTask(e.sent.data.tasks),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),console.error();case 18:case"end":return e.stop()}},null,null,[[0,15]])}function renderTask(e){var t=e.map(function(e){if("inProgress"===e.status)return'<div class=\'tasks inProgress\' draggable="true">\n                <button class="tasks__edit" id=\''.concat(e.id,"name' onclick=uploadTask(\"").concat(e.id,'")>\n                    <h4> ').concat(e.title," </h4>             \n                    <p> ").concat(e.description,' </p>\n                </button>\n                <p><i class="fas fa-trash tasks__delete--button" onclick=\'deleteTask("').concat(e.id,'")\' title="Remove"></i></p>\n                </div>')}).join("");document.getElementById("inProgress").innerHTML=t;var n=e.map(function(e){if("done"===e.status)return'<div class=\'tasks done\' draggable="true">\n                <button class="tasks__edit" id=\''.concat(e.id,"name' onclick=uploadTask(\"").concat(e.id,'")>\n                    <h4> ').concat(e.title," </h4>             \n                    <p> ").concat(e.description,' </p>\n                </button>\n                <p><i class="fas fa-trash tasks__delete--button" onclick=\'deleteTask("').concat(e.id,'")\' title="Remove"></i></p>\n                </div>')}).join("");document.getElementById("done").innerHTML=n;var a=e.map(function(e){if("toDo"===e.status)return'<div class=\'tasks toDo\' draggable="true">\n                <button class="tasks__edit" id=\''.concat(e.id,"name' onclick=uploadTask(\"").concat(e.id,'")>\n                    <h4> ').concat(e.title," </h4>             \n                    <p> ").concat(e.description,' </p>\n                </button>\n                <p><i class="fas fa-trash tasks__delete--button" onclick=\'deleteTask("').concat(e.id,'")\' title="Remove"></i></p>\n                </div>')}).join(""),r=document.getElementById("toDo");console.dir(r),r.innerHTML=a}function getAllTasks(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(axios.get("/getAllTasks"));case 3:renderTask(e.sent.data),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),console.log(e.t0);case 10:case"end":return e.stop()}},null,null,[[0,7]])}function deleteTask(t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,confirm("Are you sure do you want to delete this task?"))return e.next=5,regeneratorRuntime.awrap(axios.delete("/deleteTask/".concat(t)));e.next=7;break;case 5:renderTask(e.sent.data.tasks);case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),console.error(e.t0);case 12:case"end":return e.stop()}},null,null,[[0,9]])}handleForm.addEventListener("submit",handleSubmit);var taskIdEdit="";function uploadTask(t){var n,a,r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,modalEdit){e.next=3;break}throw new Error("There is a problem finding modalEdit from HTML");case 3:if(modalEdit.style.display="block",modalEdit.classList.add("showModal"),n=document.querySelector("#formEdit")){e.next=8;break}throw new Error("There is a problem finding form from HTML");case 8:return e.next=10,regeneratorRuntime.awrap(axios.get("/getAllTasks"));case 10:a=e.sent,r=a.data.map(function(e){if(e.id===t)return'<h1>EDIT TASK</h1>\n                    \n                    <div class="form__wrapper">\n                    <label for="title">Title:</label>\n                    <input type="text" name="title" id="title" maxlength="40" value="'.concat(e.title,'" required>\n                    </div>\n    \n                    <div class="form__wrapper">\n                    <label for="description">Description:</label>\n                    <textarea type="text" name="description" id="description" cols="30" rows="10"\n                    maxlength="200" required>').concat(e.description,'</textarea>\n                    </div>\n    \n                    <div>\n                        <label for="toDo2">To Do</label>\n                        <input type="radio" id="toDo2" name="status" value="toDo" checked />\n    \n                        <label for="inProgress">In Progress</label>\n                        <input type="radio" id="inProgress" name="status" value="inProgress" />\n    \n                        <label for="done">Done</label>\n                        <input type="radio" id="done" name="status" value="done" />\n                    </div>\n                    <input class="form__input--submit" type="submit" value="Save changes">')}).join(""),n.innerHTML=r,taskIdEdit=t,e.next=19;break;case 16:e.prev=16,e.t0=e.catch(0),console.error(e.t0);case 19:case 20:case"end":return e.stop()}},null,null,[[0,16]])}function handleEdit(t){var n,a,r,s,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t.preventDefault(),e.prev=1,n=t.target.elements,a=n.title,r=n.description,s=n.status,taskTitle=a.value,taskDescription=r.value,taskStatus=s.value,taskTitle&&taskDescription&&taskStatus){e.next=8;break}throw new Error("You need to complete all the fields");case 8:if(modalEdit){e.next=10;break}throw new Error("There is a problem finding modalEdit from HTML");case 10:return modalEdit.style.display="none",t.target.reset(),e.next=14,regeneratorRuntime.awrap(axios.put("/editTask/".concat(taskIdEdit),{taskTitle:taskTitle,taskDescription:taskDescription,taskStatus:taskStatus}));case 14:o=e.sent,i=o.data.tasks,console.log(i),renderTask(i),e.next=23;break;case 20:e.prev=20,e.t0=e.catch(1),console.error(e.t0);case 23:case 24:case"end":return e.stop()}},null,null,[[1,20]])}