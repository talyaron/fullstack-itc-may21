"use strict";function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var express=require("express");app=express();var port=process.env.PORT||5e3;app.use(express.json());var Ajv=require("ajv"),ajv=new Ajv;app.use(express.static("public"));var Student=function e(t,n,r,s){_classCallCheck(this,e),this.name=t,this.age=n,this.studentID=r,this.averageGrade=s},Students=function(){function e(){_classCallCheck(this,e),this.students=[]}return _createClass(e,[{key:"addStudent",value:function(e){try{this.students.push(e)}catch(e){console.error(e)}}},{key:"findStudentWithID",value:function(t){try{var e=this.students.filter(function(e){return e.studentID===parseInt(t)});return html='<div class="holder__student" id="'.concat(e[0].studentID,'">\n                <div class="holder__student__id">Student ID: ').concat(e[0].studentID,'</div>\n                <div class="holder__student__name">Student Name: ').concat(e[0].name,'</div>\n                <div class="holder__student__age"> Student Age: ').concat(e[0].age,'</div>\n                <div class="holder__student__averageGrade"> Average Grade: ').concat(e[0].averageGrade,"%</div>\n                </div>")}catch(e){console.error(e)}}}]),e}(),students=new Students,html="";app.put("/addStudent",function(e,t){try{var n=ajv.compile({type:"object",properties:{name:{type:"string"},age:{type:"integer"},studentID:{type:"integer"},averageGrade:{type:"integer"}},required:["name","age","studentID","averageGrade"],additionalProperties:!1}),r=e.body;if(!n(r))throw n.errors.forEach(function(e){return console.log(e.message)}),new Error("Invalid data was transferd");console.log(r),students.addStudent(new Student(r.name,r.age,r.studentID,r.averageGrade)),console.log(students),t.send(students)}catch(e){console.log(e),t.status(400).send({error:e.message})}}),app.get("/getStudentQuery",function(e,t){try{var n=e.query.id,r=students.findStudentWithID(n);t.send(r)}catch(e){console.error(e)}}),app.get("/getStudentParam/:ID",function(e,t){try{var n=e.params.ID,r=students.findStudentWithID(n);t.send(r)}catch(e){console.error(e)}}),app.get("/getStud",function(e,t){try{t.send({html:html})}catch(e){console.error(e)}}),app.listen(port,function(){console.log("Server listen on port",port)});